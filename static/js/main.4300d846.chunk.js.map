{"version":3,"sources":["components/Form/Form.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Form","defaultSelect","inputTitle","handleChange","type","name","value","placeholder","onChange","TodoList","state","target","setState","filterByTitle","todo","title","toLowerCase","includes","filterByStatus","completed","this","props","todos","selectUser","selectedUserId","filterTodos","filter","className","map","key","id","classNames","readOnly","checked","userId","onClick","React","Component","request","path","fetch","then","response","json","result","data","getUser","CurrentUser","selectedUser","user","prevProps","clearUser","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4300d846.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ defaultSelect, inputTitle, handleChange }) => (\n  <form>\n    <input\n      type=\"text\"\n      name=\"inputTitle\"\n      value={inputTitle}\n      placeholder=\"filter todos\"\n      onChange={handleChange}\n    />\n\n    <select\n      name=\"defaultSelect\"\n      value={defaultSelect}\n      onChange={handleChange}\n    >\n      <option>all</option>\n      <option>completed</option>\n      <option>active</option>\n    </select>\n  </form>\n);\n\nForm.propTypes = {\n  defaultSelect: PropTypes.string.isRequired,\n  inputTitle: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Form } from '../Form';\n\nexport class TodoList extends React.Component {\n  state = {\n    inputTitle: '',\n    defaultSelect: 'all',\n  }\n\n  handleChange = ({ target }) => {\n    const { value, name } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  filterByTitle = (todo) => {\n    const { inputTitle } = this.state;\n\n    if (todo.title !== null) {\n      return todo.title.toLowerCase()\n        .includes(inputTitle.toLowerCase());\n    }\n\n    return null;\n  }\n\n  filterByStatus = (todo) => {\n    const { defaultSelect } = this.state;\n\n    switch (defaultSelect) {\n      case 'completed': return todo.completed;\n      case 'active': return !todo.completed;\n      default: return true;\n    }\n  }\n\n  render() {\n    const { todos, selectUser, selectedUserId } = this.props;\n    const { inputTitle, defaultSelect } = this.state;\n\n    const filterTodos = todos\n      .filter(this.filterByTitle)\n      .filter(this.filterByStatus);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <Form\n          inputTitle={inputTitle}\n          defaultSelect={defaultSelect}\n          handleChange={this.handleChange}\n        />\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filterTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                })}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly checked={todo.completed} />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames('TodoList__user-button', 'button', {\n                    'TodoList__user-button--selected':\n                    selectedUserId === todo.userId,\n                  })}\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      userId: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = path => (\n  fetch(`${BASE_URL}${path}`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const getTodos = () => request('/todos');\n\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: null,\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(user => this.setState({\n        selectedUser: user,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUser(this.props.userId)\n        .then(user => this.setState({\n          selectedUser: user,\n        }));\n    }\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n    const { clearUser } = this.props;\n\n    if (!selectedUser) {\n      return 'Loading...';\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {selectedUser.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n        <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n        <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n        <button\n          type=\"button\"\n          onClick={clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
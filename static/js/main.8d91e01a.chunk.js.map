{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","inputTitle","defaultSelect","handleChange","target","value","name","setState","filterByTitle","todo","title","toLowerCase","includes","filterByStatus","completed","this","props","todos","selectUser","filterTodos","filter","className","type","placeholder","onChange","map","key","id","classNames","readOnly","checked","onClick","userId","React","Component","BASE_URL","getUser","fetch","then","response","json","result","data","CurrentUser","selectedUser","user","prevProps","clearUser","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d91e01a.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    inputTitle: '',\n    defaultSelect: 'all',\n  }\n\n  handleChange = ({ target }) => {\n    const { value, name } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  filterByTitle = (todo) => {\n    const { inputTitle } = this.state;\n\n    if (todo.title !== null) {\n      return todo.title.toLowerCase()\n        .includes(inputTitle.toLowerCase());\n    }\n\n    return null;\n  }\n\n  filterByStatus = (todo) => {\n    const { defaultSelect } = this.state;\n\n    switch (defaultSelect) {\n      case 'completed': return todo.completed;\n      case 'active': return !todo.completed;\n      default: return true;\n    }\n  }\n\n  render() {\n    const { todos, selectUser } = this.props;\n    const { inputTitle, defaultSelect } = this.state;\n\n    const filterTodos = todos\n      .filter(this.filterByTitle)\n      .filter(this.filterByStatus);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <form>\n          <input\n            type=\"text\"\n            name=\"inputTitle\"\n            value={inputTitle}\n            placeholder=\"filter todos\"\n            onChange={this.handleChange}\n          />\n\n          <select\n            name=\"defaultSelect\"\n            value={defaultSelect}\n            onChange={this.handleChange}\n          >\n            <option>all</option>\n            <option>completed</option>\n            <option>active</option>\n          </select>\n        </form>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filterTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                })}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly checked={todo.completed} />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      userId: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = () => (\n  fetch(`${BASE_URL}/todos`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const getUser = userId => (\n  fetch(`${BASE_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: {},\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(user => this.setState({\n        selectedUser: user,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUser(this.props.userId)\n        .then(user => this.setState({\n          selectedUser: user,\n        }));\n    }\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {selectedUser.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n        <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n        <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            clearUser();\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}